@eletronic{perfTestingWebSphere,
  author = {David Hare},
  title = {Performance testing and analysis with WebSphere Application Server},
  year = 2012,
  url = {http://www.ibm.com/developerworks/websphere/techjournal/1208_hare/1208_hare.html},
  urldate = {2016-07-21}
}

@eletronic{stepFun,
  author = {Wikipedia},
  title = {Step Function},
  url = {https://en.wikipedia.org/wiki/Step_function},
  urldate = {2016-07-21}
}

@book{efron1994introduction,
  title={An Introduction to the Bootstrap},
  author={Efron, Bradley and Tibshirani, Robert J.},
  isbn={9780412042317},
  lccn={93004489},
  series={Chapman \& Hall/CRC Monographs on Statistics \& Applied Probability},
  url={https://books.google.com.br/books?id=gLlpIUxRntoC},
  year={1994},
  publisher={Taylor \& Francis}
}

@article{Banga:1999:MCW:598682.598725,
 author = {Banga, Gaurav and Druschel, Peter},
 title = {Measuring the Capacity of a Web Server Under Realistic Loads},
 journal = {World Wide Web},
 issue_date = {1999},
 volume = {2},
 number = {1-2},
 month = jan,
 year = {1999},
 issn = {1386-145X},
 pages = {69--83},
 numpages = {15},
 url = {http://dx.doi.org/10.1023/A:1019292504731},
 doi = {10.1023/A:1019292504731},
 acmid = {598725},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
} 

@INPROCEEDINGS{995163, 
author={Chia-Tien Dan Lo and Witawas Srisa-an and J. Morris Chang}, 
booktitle={Performance, Computing, and Communications Conference, 2002. 21st IEEE International}, 
title={A performance comparison between stop-the-world and multithreaded concurrent generational garbage collection for Java}, 
year={2002}, 
pages={301-308}, 
keywords={Java;multi-threading;object-oriented programming;software performance evaluation;storage management;Java;MCGC;automatic dynamic memory management;execution time;memory footprint;modified buddy system;multithreaded concurrent generational garbage collection;object oriented programming;performance comparison;reference counting approach;stop-the-world mark-sweep algorithm;Computer languages;Computer science;Dynamic programming;Java;Memory management;Object oriented programming;Parallel programming;Technology management;Time measurement;Virtual machining}, 
doi={10.1109/IPCCC.2002.995163}, 
month={},}

@inproceedings{DBLP:conf/cmg/WilliamsS04,
  author    = {Lloyd G. Williams and
               Connie U. Smith},
  title     = {Web Application Scalability: {A} Model-Based Approach},
  booktitle = {30th International Computer Measurement Group Conference, December
               5-10, 2004, Las Vegas, Nevada, USA, Proceedings},
  pages     = {215--226},
  year      = {2004},
  crossref  = {DBLP:conf/cmg/2004},
  url       = {http://www.cmg.org/?s2member_file_download=/proceedings/2004/4246.pdf},
  timestamp = {Mon, 22 Sep 2014 16:50:16 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/cmg/WilliamsS04},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{DBLP:conf/ipps/JayasenaFRPP15,
  author    = {Sanath Jayasena and
               Milinda Fernando and
               Tharindu Rusira and
               Chalitha Perera and
               Chamara Philips},
  title     = {Auto-Tuning the Java Virtual Machine},
  booktitle = {2015 {IEEE} International Parallel and Distributed Processing Symposium
               Workshop, {IPDPS} 2015, Hyderabad, India, May 25-29, 2015},
  pages     = {1261--1270},
  year      = {2015},
  crossref  = {DBLP:conf/ipps/2015w},
  url       = {http://dx.doi.org/10.1109/IPDPSW.2015.84},
  doi       = {10.1109/IPDPSW.2015.84},
  timestamp = {Wed, 04 May 2016 15:14:48 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/ipps/JayasenaFRPP15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{Vaquero:2008:BCT:1496091.1496100,
 author = {Vaquero, Luis M. and Rodero-Merino, Luis and Caceres, Juan and Lindner, Maik},
 title = {A Break in the Clouds: Towards a Cloud Definition},
 journal = {SIGCOMM Comput. Commun. Rev.},
 issue_date = {January 2009},
 volume = {39},
 number = {1},
 month = {Dezembro},
 year = {2008},
 issn = {0146-4833},
 pages = {50--55},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/1496091.1496100},
 doi = {10.1145/1496091.1496100},
 acmid = {1496100},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cloud computing, cloud definition, grid},
} 

@article{10.1109/MIC.2009.103,
author = {Marios D. Dikaiakos and Dimitrios Katsaros and Pankaj Mehra and George Pallis and Athena Vakali},
title = {Cloud Computing: Distributed Internet Computing for IT and Scientific Research},
journal ={IEEE Internet Computing},
volume = {13},
number = {5},
issn = {1089-7801},
month = {Setembro},
year = {2009},
pages = {10-13},
doi = {http://doi.ieeecomputersociety.org/10.1109/MIC.2009.103},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@ARTICLE{4804043, 
author={J. Voas and J. Zhang}, 
journal={IT Professional}, 
title={Cloud Computing: New Wine or Just a New Bottle?}, 
year={2009}, 
volume={11}, 
number={2}, 
pages={15-17}, 
keywords={Business;Cloud computing;Computer applications;Computer architecture;Computer interfaces;Grid computing;Internet;Physics computing;Portable computers;User interfaces;IT Professional;Internet;cloud computing;clouds}, 
doi={10.1109/MITP.2009.23}, 
ISSN={1520-9202}, 
month={Mar√ßo},}

@techreport{Armbrust:EECS-2009-28,
    Author = {Armbrust, Michael and Fox, Armando and Griffith, Rean and Joseph, Anthony D. and Katz, Randy H. and Konwinski, Andrew and Lee, Gunho and Patterson, David A. and Rabkin, Ariel and Stoica, Ion and Zaharia, Matei},
    Title = {Above the Clouds: A Berkeley View of Cloud Computing},
    Institution = {EECS Department, University of California, Berkeley},
    Year = {2009},
    Month = {Feb},
    URL = {http://www.eecs.berkeley.edu/Pubs/TechRpts/2009/EECS-2009-28.html},
    Number = {UCB/EECS-2009-28},
    Abstract = {Provided certain obstacles are overcome, we believe Cloud Computing has the potential to transform a large part of the IT industry, making software even more attractive as a service and shaping the way IT hardware is designed and purchased.  Developers with innovative ideas for new interactive Internet services no longer require the large capital outlays in hardware to deploy their service or the human expense to operate it. They need not be concerned about over-provisioning for a service whose popularity does not meet their predictions, thus wasting costly resources, or under-provisioning for one that becomes wildly popular, thus missing potential customers and revenue. Moreover, companies with large batch-oriented tasks can get their results as quickly as their programs can scale, since using 1000 servers for one hour costs no more than using one server for 1000 hours. This elasticity of resources, without paying a premium for large scale, is unprecedented in the history of IT.  The economies of scale of very large-scale datacenters combined with  ``pay-as-you-go'' resource usage has heralded the rise of Cloud Computing. It is now attractive to deploy an innovative new Internet service on a third party's Internet Datacenter rather than your own infrastructure, and to gracefully scale its resources as it grows or declines in popularity and revenue. Expanding and shrinking daily in response to normal diurnal patterns could lower costs even further. Cloud Computing transfers the risks of over-provisioning or under-provisioning to the Cloud Computing provider, who mitigates that risk by statistical multiplexing over a much larger set of users and who offers relatively low prices due better utilization and from the economy of purchasing at a larger scale. We define terms, present an economic model that quantifies the key buy vs. pay-as-you-go decision, offer a spectrum to classify Cloud Computing providers, and give our view of the top 10 obstacles and opportunities to the growth of Cloud Computing.}
}

@book{Kernighan:1988:CPL:576122,
 author = {Kernighan, Brian W.},
 editor = {Ritchie, Dennis M.},
 title = {The  C Programming Language},
 year = {1988},
 isbn = {0131103709},
 edition = {2nd},
 publisher = {Prentice Hall Professional Technical Reference},
} 

@book{Butenhof:1997:PPT:263953,
 author = {Butenhof, David R.},
 title = {Programming with POSIX Threads},
 year = {1997},
 isbn = {0-201-63392-2},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
} 

@article{Dean:2008:MSD:1327452.1327492,
 author = {Dean, Jeffrey and Ghemawat, Sanjay},
 title = {MapReduce: Simplified Data Processing on Large Clusters},
 journal = {Commun. ACM},
 issue_date = {January 2008},
 volume = {51},
 number = {1},
 month = jan,
 year = {2008},
 issn = {0001-0782},
 pages = {107--113},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/1327452.1327492},
 doi = {10.1145/1327452.1327492},
 acmid = {1327492},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Shvachko:2010:HDF:1913798.1914427,
 author = {Shvachko, Konstantin and Kuang, Hairong and Radia, Sanjay and Chansler, Robert},
 title = {The Hadoop Distributed File System},
 booktitle = {Proceedings of the 2010 IEEE 26th Symposium on Mass Storage Systems and Technologies (MSST)},
 series = {MSST '10},
 year = {2010},
 isbn = {978-1-4244-7152-2},
 pages = {1--10},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/MSST.2010.5496972},
 doi = {10.1109/MSST.2010.5496972},
 acmid = {1914427},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@book{Aho:1987:APL:29361,
 author = {Aho, Alfred V. and Kernighan, Brian W. and Weinberger, Peter J.},
 title = {The AWK Programming Language},
 year = {1987},
 isbn = {0-201-07981-X},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
} 

@book{Arnold:2000:JPL:556709,
 author = {Arnold, Ken and Gosling, James and Holmes, David},
 title = {The  Java Programming Language},
 year = {2000},
 isbn = {0201704331},
 edition = {3rd},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
} 

@Article{Appel1990,
author="Appel, Andrew W.",
title="A runtime system",
journal="LISP and Symbolic Computation",
year="1990",
volume="3",
number="4",
pages="343--380",
abstract="The runtime data structures of the Standard ML of New Jersey compiler are simple yet general. As a result, code generators are easy to implement, programs execute quickly, garbage collectors are easy to implement and work efficiently, and a variety of runtime facilities can be provided with ease.",
issn="1573-0557",
doi="10.1007/BF01807697",
url="http://dx.doi.org/10.1007/BF01807697"
}

@misc{awslambda,
  title = {{AWS Lambda}},
  howpublished = {\url{https://aws.amazon.com/lambda/details/}},
  note = {√öltimo acesso: 2016-08-02}
}

@misc{googlefunctions,
  title = {{Google Clould Functions}},
  howpublished = {\url{https://cloud.google.com/functions/}},
  note = {√öltimo acesso: 2016-08-02}
}

@misc{azurefunctions,
  title = {{MS Azure Functions}},
  howpublished = {\url{https://azure.microsoft.com/en-us/services/functions/}},
  note = {√öltimo acesso: 2016-08-02}
}

@INPROCEEDINGS{995163, 
author={Chia-Tien Dan Lo and Witawas Srisa-an and J. Morris Chang}, 
booktitle={Performance, Computing, and Communications Conference, 2002. 21st IEEE International}, 
title={A performance comparison between stop-the-world and multithreaded concurrent generational garbage collection for Java}, 
year={2002}, 
pages={301-308}, 
keywords={Java;multi-threading;object-oriented programming;software performance evaluation;storage management;Java;MCGC;automatic dynamic memory management;execution time;memory footprint;modified buddy system;multithreaded concurrent generational garbage collection;object oriented programming;performance comparison;reference counting approach;stop-the-world mark-sweep algorithm;Computer languages;Computer science;Dynamic programming;Java;Memory management;Object oriented programming;Parallel programming;Technology management;Time measurement;Virtual machining}, 
doi={10.1109/IPCCC.2002.995163}, 
month={},}

@inproceedings{DBLP:conf/ipps/JayasenaFRPP15,
  author    = {Sanath Jayasena and
               Milinda Fernando and
               Tharindu Rusira and
               Chalitha Perera and
               Chamara Philips},
  title     = {Auto-Tuning the Java Virtual Machine},
  booktitle = {2015 {IEEE} International Parallel and Distributed Processing Symposium
               Workshop, {IPDPS} 2015, Hyderabad, India, May 25-29, 2015},
  pages     = {1261--1270},
  year      = {2015},
  crossref  = {DBLP:conf/ipps/2015w},
  url       = {http://dx.doi.org/10.1109/IPDPSW.2015.84},
  doi       = {10.1109/IPDPSW.2015.84},
  timestamp = {Wed, 04 May 2016 15:14:48 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/ipps/JayasenaFRPP15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}