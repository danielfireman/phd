@eletronic{perfTestingWebSphere,
  author = {David Hare},
  title = {Performance testing and analysis with WebSphere Application Server},
  year = 2012,
  url = {http://www.ibm.com/developerworks/websphere/techjournal/1208_hare/1208_hare.html},
  urldate = {2016-07-21}
}

@eletronic{stepFun,
  author = {Wikipedia},
  title = {Step Function},
  url = {https://en.wikipedia.org/wiki/Step_function},
  urldate = {2016-07-21}
}

@book{efron1994introduction,
  title={An Introduction to the Bootstrap},
  author={Efron, Bradley and Tibshirani, Robert J.},
  isbn={9780412042317},
  lccn={93004489},
  series={Chapman \& Hall/CRC Monographs on Statistics \& Applied Probability},
  url={https://books.google.com.br/books?id=gLlpIUxRntoC},
  year={1994},
  publisher={Taylor \& Francis}
}

@article{Banga:1999:MCW:598682.598725,
 author = {Banga, Gaurav and Druschel, Peter},
 title = {Measuring the Capacity of a Web Server Under Realistic Loads},
 journal = {World Wide Web},
 issue_date = {1999},
 volume = {2},
 number = {1-2},
 month = jan,
 year = {1999},
 issn = {1386-145X},
 pages = {69--83},
 numpages = {15},
 url = {http://dx.doi.org/10.1023/A:1019292504731},
 doi = {10.1023/A:1019292504731},
 acmid = {598725},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
} 

@INPROCEEDINGS{995163, 
author={Chia-Tien Dan Lo and Witawas Srisa-an and J. Morris Chang}, 
booktitle={Performance, Computing, and Communications Conference, 2002. 21st IEEE International}, 
title={A performance comparison between stop-the-world and multithreaded concurrent generational garbage collection for Java}, 
year={2002}, 
pages={301-308}, 
keywords={Java;multi-threading;object-oriented programming;software performance evaluation;storage management;Java;MCGC;automatic dynamic memory management;execution time;memory footprint;modified buddy system;multithreaded concurrent generational garbage collection;object oriented programming;performance comparison;reference counting approach;stop-the-world mark-sweep algorithm;Computer languages;Computer science;Dynamic programming;Java;Memory management;Object oriented programming;Parallel programming;Technology management;Time measurement;Virtual machining}, 
doi={10.1109/IPCCC.2002.995163}, 
month={},}